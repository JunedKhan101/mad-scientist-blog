---
const { title, href, imgurl, description, postedat, tags } = Astro.props;
var articleLink = `/article/${href}`;
import formatDate from "../helpers/formatDate";
import PostAndCardFooter from "./PostAndCardFooter.astro";

var blogpostedat = formatDate(postedat);

var backgroundBlur = {
	'background': '#39383885',
    'backdropFilter': 'blur(13px) saturate(150%)'
}
---
<a href={articleLink} class="w-auto min-h-auto h-fit bg-white border-none rounded-lg shadow dark:bg-[#001220] grid grid-rows-auto md:grid-rows-auto">
	<div class="w-full h-auto relative overflow-hidden">
		{imgurl && <img class="rounded-t-lg w-full h-[300px] object-cover" src={imgurl} alt="cover-image" />}
		<div class="absolute bottom-0 w-full h-15" style={backgroundBlur}>
			<div class="flex items-center justify-between gap-x-1 text-white px-6 py-4">
				<div class="flex flex-col gap-1 items-center justify-center">
					<p class="text-sm font-bold">{blogpostedat && blogpostedat}</p>
				</div>
				<p>Category</p>
			</div>
		</div>
	</div>
    <div class="px-5 py-4">
		<h5 class="mb-2 text-lg sm:text-xl md:text-2xl font-bold tracking-tight text-gray-900 dark:text-white">{title}</h5>
        <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">
			{
				description ? (
					<p class="font-normal text-gray-700 dark:text-gray-400">
						{description}
					</p>
				) : (
					null
				)
			}
		</p>
		<PostAndCardFooter postedat={postedat} tags={tags} isArticle={false} />
    </div>
</a>
