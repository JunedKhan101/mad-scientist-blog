---
import { getAllPosts } from "../../lib/cosmic";
import getUniqueTagsList from "../../helpers/getUniqueTagsList";
import type { CosmicObject, Tag } from "../../types/cosmicObj";
import ArticleLayout from "../../layouts/ArticleLayout.astro";
import Posts from "../../components/Posts.astro";

export async function getStaticPaths() {
	const filterObjectsByTags = (cosmicObj: CosmicObject[], filter: string) => {
	const matchingObjects: Array<Object> = [];

	cosmicObj.forEach((item) => {
		const tags = item.metadata.tags;
		const tagTitles = tags.map((tag) => tag.title);
		if (tagTitles.includes(filter)) {
			matchingObjects.push(item);
		}
	});
	return matchingObjects as CosmicObject[];
};
	const cosmicObj = (await getAllPosts()) || [];
	var allUniqueTags = getUniqueTagsList(cosmicObj);
	// @ts-ignore
	return allUniqueTags.map((tag: Tag) => {
		return {
			params: { tag: tag.title },
			props: { obj: filterObjectsByTags(cosmicObj, tag.title) }
		};
	});
}
const { tag } = Astro.params; // slug url
const { obj } = Astro.props; // CosmicObject
---

<ArticleLayout title={tag} description={"tag: " + tag}>
	<h1 class="text-4xl m-0">#{tag}</h1>
	<Posts data={obj} />
</ArticleLayout>
